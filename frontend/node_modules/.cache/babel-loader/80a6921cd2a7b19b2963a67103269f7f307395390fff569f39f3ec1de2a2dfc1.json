{"ast":null,"code":"import axios from 'axios';\nexport const fetchProduct = async productId => {\n  try {\n    const response = await axios.get(`http://localhost:4000/api/products/${productId}`);\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching product:', error);\n    throw error;\n  }\n};\nexport const fetchAllProducts = async () => {\n  try {\n    const response = await axios.get(`http://localhost:4000/api/products`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching product:', error);\n    throw error;\n  }\n};\nexport const fetchProductsBatch = async (currentPage, limit) => {\n  try {\n    const response = await axios.get(`http://localhost:4000/api/products/batch`, {\n      params: {\n        _page: currentPage,\n        _limit: limit\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    throw error;\n  }\n};\nexport const postProduct = async data => {\n  try {\n    const response = await axios.post(`http://localhost:4000/api/products/`, data);\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error posting product:', error);\n    throw error;\n  }\n};\nexport const putProduct = async (productId, data) => {\n  try {\n    const response = await axios.put(`http://localhost:4000/api/products/${productId}`, data);\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating product:', error);\n    throw error;\n  }\n};\nexport const deleteProduct = async productId => {\n  try {\n    const response = await axios.delete(`http://localhost:4000/api/products/${productId}`);\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting product:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","fetchProduct","productId","response","get","console","log","data","error","fetchAllProducts","fetchProductsBatch","currentPage","limit","params","_page","_limit","postProduct","post","putProduct","put","deleteProduct","delete"],"sources":["/home/gabriel/Desktop/projetos2024/nilo/frontend/src/services/ProductService.js"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchProduct = async (productId) => {\n  try {\n    const response = await axios.get(`http://localhost:4000/api/products/${productId}`);\n    console.log(response.data)\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching product:', error);\n    throw error;\n  }\n};\n\n\nexport const fetchAllProducts = async () => {\n  try {\n    const response = await axios.get(`http://localhost:4000/api/products`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching product:', error);\n    throw error;\n  }\n};\n\nexport const fetchProductsBatch = async (currentPage, limit) => {\n  try {\n    const response = await axios.get(`http://localhost:4000/api/products/batch`, {\n      params: {\n        _page: currentPage,\n        _limit: limit\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    throw error;\n  }\n};\n\n\n\nexport const postProduct = async (data) => {\n  try {\n    const response = await axios.post(`http://localhost:4000/api/products/`, data);\n    console.log(response.data)\n    return response.data;\n  } catch (error) {\n    console.error('Error posting product:', error);\n    throw error;\n  }\n};\n\nexport const putProduct = async (productId, data) => {\n  try {\n    const response = await axios.put(`http://localhost:4000/api/products/${productId}`, data);\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating product:', error);\n    throw error;\n  }\n};\n\n\nexport const deleteProduct = async (productId) => {\n  try {\n    const response = await axios.delete(`http://localhost:4000/api/products/${productId}`);\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting product:', error);\n    throw error;\n  }\n};    "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAG,MAAOC,SAAS,IAAK;EAC/C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,sCAAsCF,SAAS,EAAE,CAAC;IACnFG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;IAC1B,OAAOJ,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAGD,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,oCAAoC,CAAC;IACtE,OAAOD,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,kBAAkB,GAAG,MAAAA,CAAOC,WAAW,EAAEC,KAAK,KAAK;EAC9D,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,0CAA0C,EAAE;MAC3ES,MAAM,EAAE;QACNC,KAAK,EAAEH,WAAW;QAClBI,MAAM,EAAEH;MACV;IACF,CAAC,CAAC;IACF,OAAOT,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;AAID,OAAO,MAAMQ,WAAW,GAAG,MAAOT,IAAI,IAAK;EACzC,IAAI;IACF,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACiB,IAAI,CAAC,qCAAqC,EAAEV,IAAI,CAAC;IAC9EF,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;IAC1B,OAAOJ,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMU,UAAU,GAAG,MAAAA,CAAOhB,SAAS,EAAEK,IAAI,KAAK;EACnD,IAAI;IACF,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACmB,GAAG,CAAC,sCAAsCjB,SAAS,EAAE,EAAEK,IAAI,CAAC;IACzFF,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;IAC1B,OAAOJ,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAGD,OAAO,MAAMY,aAAa,GAAG,MAAOlB,SAAS,IAAK;EAChD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACqB,MAAM,CAAC,sCAAsCnB,SAAS,EAAE,CAAC;IACtFG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;IAC1B,OAAOJ,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}