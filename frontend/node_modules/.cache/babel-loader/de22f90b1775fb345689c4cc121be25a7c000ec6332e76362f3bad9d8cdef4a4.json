{"ast":null,"code":"import axios from 'axios';\nexport const fetchAllItem = async () => {\n  try {\n    const response = await axios.get(`http://localhost:4000/api/item`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching product:', error);\n    throw error;\n  }\n};\nexport const fetchItemsByCart = async (userId, cartDate) => {\n  try {\n    const response = await axios.get('http://localhost:4000/api/item/cart', {\n      params: {\n        id_user: userId,\n        date_created: cartDate\n      } // Send userId as a query parameter\n    });\n    console.log('FetchCartCurrent Response:', response.data); // Log to verify data\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching current cart:', error);\n    throw error;\n  }\n};\nexport const postItem = async (id, userId, cartDate) => {\n  try {\n    const response = await axios.post(`http://localhost:4000/api/item`, {\n      id_product: id,\n      id_user: userId,\n      cart_date: cartDate\n    });\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error posting product:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","fetchAllItem","response","get","data","error","console","fetchItemsByCart","userId","cartDate","params","id_user","date_created","log","postItem","id","post","id_product","cart_date"],"sources":["/home/gabriel/Desktop/projetos2024/nilo/frontend/src/services/ItemService.js"],"sourcesContent":["import axios from 'axios';\n\n\nexport const fetchAllItem = async () => {\n  try {\n    const response = await axios.get(`http://localhost:4000/api/item`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching product:', error);\n    throw error;\n  }\n};\n\nexport const fetchItemsByCart = async (userId,cartDate) => {\n  try {\n    const response = await axios.get('http://localhost:4000/api/item/cart', {\n      params: { id_user: userId, date_created:cartDate } // Send userId as a query parameter\n    });\n    console.log('FetchCartCurrent Response:', response.data); // Log to verify data\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching current cart:', error);\n    throw error;\n  }\n};\n\n\n\nexport const postItem = async (id,userId,cartDate) => {\n  try {\n    const response = await axios.post(`http://localhost:4000/api/item`, {id_product:id,id_user:userId,cart_date:cartDate});\n    console.log(response.data)\n    return response.data;\n  } catch (error) {\n    console.error('Error posting product:', error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,gCAAgC,CAAC;IAClE,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAG,MAAAA,CAAOC,MAAM,EAACC,QAAQ,KAAK;EACzD,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,qCAAqC,EAAE;MACtEO,MAAM,EAAE;QAAEC,OAAO,EAAEH,MAAM;QAAEI,YAAY,EAACH;MAAS,CAAC,CAAC;IACrD,CAAC,CAAC;IACFH,OAAO,CAACO,GAAG,CAAC,4BAA4B,EAAEX,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;IAC1D,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;AAID,OAAO,MAAMS,QAAQ,GAAG,MAAAA,CAAOC,EAAE,EAACP,MAAM,EAACC,QAAQ,KAAK;EACpD,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMF,KAAK,CAACgB,IAAI,CAAC,gCAAgC,EAAE;MAACC,UAAU,EAACF,EAAE;MAACJ,OAAO,EAACH,MAAM;MAACU,SAAS,EAACT;IAAQ,CAAC,CAAC;IACtHH,OAAO,CAACO,GAAG,CAACX,QAAQ,CAACE,IAAI,CAAC;IAC1B,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}