{"ast":null,"code":"import axios from 'axios';\nexport const fetchAllCarts = async () => {\n  try {\n    const response = await axios.get(`http://localhost:4000/api/cart`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching product:', error);\n    throw error;\n  }\n};\nexport const fetchCartCurrent = async userId => {\n  try {\n    const response = await axios.get('http://localhost:4000/api/cart/user/current?id_user=' + toString(userId), {\n      params: {\n        id_user: userId\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching product:', error);\n    throw error;\n  }\n};\nexport const postCart = async userId => {\n  try {\n    const response = await axios.post(`http://localhost:4000/api/cart`, {\n      id_user: userId\n    });\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error posting product:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","fetchAllCarts","response","get","data","error","console","fetchCartCurrent","userId","toString","params","id_user","postCart","post","log"],"sources":["/home/gabriel/Desktop/projetos2024/nilo/frontend/src/services/CartService.js"],"sourcesContent":["import axios from 'axios';\n\n\nexport const fetchAllCarts = async () => {\n  try {\n    const response = await axios.get(`http://localhost:4000/api/cart`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching product:', error);\n    throw error;\n  }\n};\n\nexport const fetchCartCurrent = async (userId) => {\n  try {\n    const response = await axios.get('http://localhost:4000/api/cart/user/current?id_user='+toString(userId), {\n      params: { id_user: userId } \n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching product:', error);\n    throw error;\n  }\n};\n\n\nexport const postCart = async (userId) => {\n  try {\n    const response = await axios.post(`http://localhost:4000/api/cart`, {id_user:userId});\n    console.log(response.data)\n    return response.data;\n  } catch (error) {\n    console.error('Error posting product:', error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,gCAAgC,CAAC;IAClE,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAG,MAAOC,MAAM,IAAK;EAChD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,sDAAsD,GAACM,QAAQ,CAACD,MAAM,CAAC,EAAE;MACxGE,MAAM,EAAE;QAAEC,OAAO,EAAEH;MAAO;IAC5B,CAAC,CAAC;IACF,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAGD,OAAO,MAAMO,QAAQ,GAAG,MAAOJ,MAAM,IAAK;EACxC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMF,KAAK,CAACa,IAAI,CAAC,gCAAgC,EAAE;MAACF,OAAO,EAACH;IAAM,CAAC,CAAC;IACrFF,OAAO,CAACQ,GAAG,CAACZ,QAAQ,CAACE,IAAI,CAAC;IAC1B,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}